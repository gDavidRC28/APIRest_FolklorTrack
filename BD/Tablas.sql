CREATE TABLE public.estados (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_estado text NOT NULL UNIQUE,
  img_estado_url text NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL
);


-- Tabla regiones (Se mantiene igual)
CREATE TABLE public.regiones (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_region text NOT NULL,
  img_region_url text NULL,
  estado_id bigint NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  CONSTRAINT fk_estado
    FOREIGN KEY (estado_id)
    REFERENCES public.estados(id)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  UNIQUE (nombre_region, estado_id)
);

-- Tabla alumnos (Perfil de los miembros, vinculada a auth.users de Supabase)
CREATE TABLE public.alumnos (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- ID propio de la tabla alumnos
  auth_user_id uuid NOT NULL UNIQUE, -- Clave For치nea al ID del usuario en Supabase Auth
  nombre_alumno text NOT NULL, -- Puedes mantenerlo o tomarlo de user_metadata
  talla text NOT NULL,
  genero text NOT NULL CHECK (genero IN ('Hombre', 'Mujer', 'Otro')),
  fecha_inicio_agrupacion date NULL,
  fecha_nacimiento date NULL,      
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  CONSTRAINT fk_auth_user
    FOREIGN KEY (auth_user_id)
    REFERENCES auth.users(id) -- Referencia a la tabla de usuarios de Supabase Auth
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

-- Tabla vestuarios (Modificada para quitar alumno_asignado_id directo)
CREATE TABLE public.vestuarios (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  folio text UNIQUE NOT NULL,
  nombre text NOT NULL,
  tipo text NOT NULL,
  talla text NOT NULL,
  genero text NOT NULL CHECK (genero IN ('Hombre', 'Mujer', 'Unisex')),
  disponibilidad boolean DEFAULT true NOT NULL,
  region_id bigint NULL, -- FK a regiones
  img_vestuario_url text NULL, 
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  CONSTRAINT fk_region_vestuario
    FOREIGN KEY(region_id)
    REFERENCES public.regiones(id)
    ON DELETE SET NULL
    ON UPDATE CASCADE
);

-- Tabla eventos:
CREATE TABLE public.eventos (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  titulo text NOT NULL,
  descripcion text NULL,
  fecha_inicio timestamp with time zone NOT NULL,
  fecha_fin timestamp with time zone NOT NULL,
  lugar_nombre text NOT NULL,
  lugar_url text NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  CONSTRAINT chk_fechas_evento CHECK (fecha_fin >= fecha_inicio)
);

-- Tabla de Uni칩n: evento_regiones (Se mantiene igual)
CREATE TABLE public.evento_regiones (
  evento_id bigint NOT NULL,
  region_id bigint NOT NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  PRIMARY KEY (evento_id, region_id),
  CONSTRAINT fk_evento_er
    FOREIGN KEY(evento_id)
    REFERENCES public.eventos(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_region_er
    FOREIGN KEY(region_id)
    REFERENCES public.regiones(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

-- Tabla evento_asignaciones (Participaci칩n, vincula alumno, evento y vestuario)
CREATE TABLE public.evento_asignaciones (
  evento_id bigint NOT NULL,
  alumno_id bigint NOT NULL, -- FK a public.alumnos.id
  vestuario_id bigint NOT NULL, -- FK a public.vestuarios.id
  estado_participacion VARCHAR(20) NOT NULL DEFAULT 'Invitado' CHECK (estado_participacion IN ('Invitado', 'Confirmado', 'Rechazado', 'Asistio')),
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  UNIQUE (evento_id, alumno_id), -- Un alumno solo puede tener un registro por evento
  CONSTRAINT fk_evento_ea
    FOREIGN KEY (evento_id)
    REFERENCES public.eventos(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_alumno_ea
    FOREIGN KEY (alumno_id)
    REFERENCES public.alumnos(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_vestuario_ea
    FOREIGN KEY (vestuario_id)
    REFERENCES public.vestuarios(id)
    ON DELETE RESTRICT -- Evita eliminar un vestuario si est치 activamente asignado
    ON UPDATE CASCADE
);