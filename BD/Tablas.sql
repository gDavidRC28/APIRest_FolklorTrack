-- Creación BD FolklorTrack
CREATE DATABASE FolklorTrack
USE FolklorTrack;

-- Tabla estados
CREATE TABLE public.estados (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_estado text NOT NULL UNIQUE,
  img_estado_url text NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL
);

-- Tabla regiones
CREATE TABLE public.regiones (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_region text NOT NULL,
  img_region_url text NULL,
  estado_id bigint NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  CONSTRAINT fk_estado
    FOREIGN KEY (estado_id)
    REFERENCES public.estados(id)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  UNIQUE (nombre_region, estado_id)
);
-- Tabla usuarios
CREATE TABLE public.usuarios (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email text NOT NULL UNIQUE CHECK (email LIKE '%@%.%'),
    password_hash text NOT NULL,
    rol text NOT NULL CHECK (rol IN ('Admin', 'Alumno')),
    activo boolean DEFAULT true NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);

-- Tabla alumnos
CREATE TABLE public.alumnos (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_alumno text NOT NULL,
  talla text NOT NULL,
  genero text NOT NULL CHECK (genero IN ('Hombre', 'Mujer', 'Otro')),
  fecha_inicio date NULL,
  edad integer NULL CHECK (edad > 0),
  foto_url text NULL,
  usuario_id bigint NULL UNIQUE,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  CONSTRAINT fk_usuario_alumno
    FOREIGN KEY (usuario_id)
    REFERENCES public.usuarios(id)
    ON DELETE SET NULL
    ON UPDATE CASCADE
);

-- Tabla vestuarios
CREATE TABLE public.vestuarios (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  folio text UNIQUE NOT NULL,
  nombre text NOT NULL,
  tipo text NOT NULL,
  talla text NOT NULL,
  genero text NOT NULL CHECK (genero IN ('Hombre', 'Mujer', 'Unisex')),
  disponibilidad boolean DEFAULT true NOT NULL,
  region_id bigint NULL,
  img_vestuario_url text NULL, 
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  CONSTRAINT fk_region_vestuario
    FOREIGN KEY(region_id)
    REFERENCES public.regiones(id)
    ON DELETE SET NULL
    ON UPDATE CASCADE
);
-- Tabla eventos
CREATE TABLE public.eventos (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  titulo text NOT NULL,
  descripcion text NULL,
  fecha timestamp with time zone NOT NULL,
  lugar_nombre text NOT NULL,
  lugar_url text NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL
);

-- Tabla de Unión: evento_regiones
CREATE TABLE public.evento_regiones (
  evento_id bigint NOT NULL,
  region_id bigint NOT NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  PRIMARY KEY (evento_id, region_id),
  CONSTRAINT fk_evento_er
    FOREIGN KEY(evento_id)
    REFERENCES public.eventos(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_region_er
    FOREIGN KEY(region_id)
    REFERENCES public.regiones(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

-- Tabla evento_asignaciones
CREATE TABLE public.evento_asignaciones (
  evento_id bigint NOT NULL,
  alumno_id bigint NOT NULL,
  vestuario_id bigint NOT NULL,
  estado_participacion VARCHAR(20) NOT NULL DEFAULT 'Invitado' CHECK (estado_participacion IN ('Invitado', 'Confirmado', 'Rechazado', 'Asistio')),
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  PRIMARY KEY (evento_id, alumno_id),
  CONSTRAINT fk_evento_ea
    FOREIGN KEY (evento_id)
    REFERENCES public.eventos(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_alumno_ea
    FOREIGN KEY (alumno_id)
    REFERENCES public.alumnos(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_vestuario_ea
    FOREIGN KEY (vestuario_id)
    REFERENCES public.vestuarios(id)
    ON DELETE RESTRICT
    ON UPDATE CASCADE
);
