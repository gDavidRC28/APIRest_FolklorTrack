-- Tabla estados
CREATE TABLE public.estados (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_estado text NOT NULL UNIQUE,
  img_estado_url text NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL
);
COMMENT ON TABLE public.estados IS 'Catálogo de estados geográficos/culturales.';

-- Tabla regiones
CREATE TABLE public.regiones (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_region text NOT NULL,
  img_region_url text NULL,
  estado_id bigint NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  CONSTRAINT fk_estado
    FOREIGN KEY (estado_id)
    REFERENCES public.estados(id)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  UNIQUE (nombre_region, estado_id)
);
COMMENT ON TABLE public.regiones IS 'Catálogo de regiones culturales/folklóricas, asociadas a un estado.';

-- Tabla alumnos
CREATE TABLE public.alumnos (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- ID propio de la tabla alumnos
  auth_user_id uuid NOT NULL UNIQUE, -- Clave Foránea al ID del usuario en Supabase Auth
  nombre_alumno text NOT NULL,
  talla text NOT NULL,
  genero text NOT NULL CHECK (genero IN ('Hombre', 'Mujer', 'Otro')),
  fecha_inicio_agrupacion date NULL, 
  fecha_nacimiento date NULL,   
  foto_url text NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  CONSTRAINT fk_auth_user
    FOREIGN KEY (auth_user_id)
    REFERENCES auth.users(id) -- Referencia a la tabla de usuarios de Supabase Auth
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);
COMMENT ON TABLE public.alumnos IS 'Perfil de los miembros (bailarines), vinculado a la tabla auth.users de Supabase.';

-- Tabla vestuarios
CREATE TABLE public.vestuarios (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  folio text UNIQUE NOT NULL,
  nombre text NOT NULL,
  tipo text NOT NULL,
  talla text NOT NULL,
  genero text NOT NULL CHECK (genero IN ('Hombre', 'Mujer', 'Unisex')),
  disponibilidad boolean DEFAULT true NOT NULL,
  region_id bigint NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  CONSTRAINT fk_region_vestuario
    FOREIGN KEY(region_id)
    REFERENCES public.regiones(id)
    ON DELETE SET NULL
    ON UPDATE CASCADE
);
COMMENT ON TABLE public.vestuarios IS 'Inventario de vestuarios. La asignación a un alumno para un evento específico se maneja en evento_asignaciones.';

-- Tabla eventos
CREATE TABLE public.eventos (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  titulo text NOT NULL,
  descripcion text NULL,
  fecha_inicio timestamp with time zone NOT NULL,
  fecha_fin timestamp with time zone NOT NULL,
  lugar_nombre text NOT NULL,
  lugar_url text NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  CONSTRAINT chk_fechas_evento CHECK (fecha_fin >= fecha_inicio)
);
COMMENT ON TABLE public.eventos IS 'Registros de las presentaciones o eventos de la agrupación.';

-- Tabla de Unión: evento_regiones
CREATE TABLE public.evento_regiones (
  evento_id bigint NOT NULL,
  region_id bigint NOT NULL,
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  PRIMARY KEY (evento_id, region_id),
  CONSTRAINT fk_evento_er
    FOREIGN KEY(evento_id)
    REFERENCES public.eventos(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_region_er
    FOREIGN KEY(region_id)
    REFERENCES public.regiones(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
COMMENT ON TABLE public.evento_regiones IS 'Tabla de unión para indicar qué regiones participan en qué eventos.';

-- Tabla evento_asignaciones
CREATE TABLE public.evento_asignaciones (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
  evento_id bigint NOT NULL,
  alumno_id bigint NOT NULL, -- FK a public.alumnos.id
  vestuario_id bigint NOT NULL, -- FK a public.vestuarios.id
  estado_participacion VARCHAR(20) NOT NULL DEFAULT 'Invitado' CHECK (estado_participacion IN ('Invitado', 'Confirmado', 'Rechazado', 'Asistio')),
  created_at timestamp with time zone DEFAULT now() NOT NULL,
  UNIQUE (evento_id, alumno_id), 
  CONSTRAINT fk_evento_ea
    FOREIGN KEY (evento_id)
    REFERENCES public.eventos(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_alumno_ea
    FOREIGN KEY (alumno_id)
    REFERENCES public.alumnos(id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_vestuario_ea
    FOREIGN KEY (vestuario_id)
    REFERENCES public.vestuarios(id)
    ON DELETE RESTRICT 
    ON UPDATE CASCADE
);
COMMENT ON TABLE public.evento_asignaciones IS 'Registra qué alumno participa en qué evento, con qué vestuario asignado y su estado de participación.';
